library(tidyverse)
nobel <- read_csv("data/nobel.csv")
library(tidyverse)
library(tidyverse)
nobel <- read_csv("data/nobel.csv")
View(nobel)
nobel <- read_csv("data/nobel.csv")
view(nobel)
nobel_living <- nobel %>%
filter(!is.na(country),
gender != "org",
is.na(died_date))
view(nobel_living)
View(nobel_living)
nobel_living <- nobel %>% #Is creating the new data frame out of nobel
filter(!is.na(country), #Is opening filter, and beginning by filtering for ones where country is not NA
gender != "org",        #Is filtering for ones where gender is not (! meaning not) equal to org
is.na(died_date))       #Is filtering for ones that do not have a death date
view(nobel_living)
nobel_living <- nobel_living %>%
mutate(
country_us = if_else(country == "USA", "USA", "Other")
)
nobel_living <- nobel_living %>%
mutate(
country_us = if_else(country == "USA", "USA", "Other")
)
nobel_living_science <- nobel_living %>%
filter(category %in% c("Physics", "Medicine", "Chemistry", "Economics"))
View(nobel_living_science)
ggplot(nobel_living_science, aes(x= country_us)) +
geom_histogram() +
facet_wrap(~ category)
ggplot(nobel_living_science, aes(x= country_us)) +
geom_bar() +
facet_wrap(~ category)
ggplot(nobel_living_science, aes(y= country_us)) +
geom_bar() +
facet_wrap(~ category)
ggplot(nobel_living_science, aes(y= country_us)) +
geom_bar() +
facet_wrap(~ category)
View(nobel_living_science)
nobel_living_science <- nobel_living_science %>% #Wholesale stealing from earlier code, as one should.
mutate(
born_country_us = if_else(born_country == "USA", "USA", "Other"))
View(nobel_living_science)
filter(born_country_us == "USA")
filter(born_country == "USA")
nobel_living_science <- nobel_living_science %>% #Wholesale stealing from earlier code, as one should.
mutate(
born_country_us = if_else(born_country == "USA", "USA", "Other"))
filter(born_country == "USA")
summary(born_country_us)
nobel_living_science <- nobel_living_science %>% #Wholesale stealing from earlier code, as one should.
mutate(
born_country_us = if_else(born_country == "USA", "USA", "Other"))
nobel_living_science %>%
filter(born_country_us == "USA")
nobel_living_science <- nobel_living_science %>% #Wholesale stealing from earlier code, as one should.
mutate(
born_country_us = if_else(born_country == "USA", "USA", "Other"))
nobel_living_science %>%
filter(born_country_us == "USA")
ggplot(nobel_living_science, aes(y= country_us,
color = born_country_us)) +
geom_bar() +
facet_wrap(~ category)
ggplot(nobel_living_science, aes(y= country_us,
fill = born_country_us)) +
geom_bar() +
facet_wrap(~ category)
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
count(born_country) %>% #Table of different countries
arrange(desc(born_country)) #ARRANGEd by DESCending order of born_country
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
count(born_country) %>% #Table of different countries
arrange(desc(born_country)) #ARRANGEd by DESCending order of born_country_us
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
count(born_country) %>% #Table of different countries
arrange(desc(born_country)) #ARRANGEd by DESCending order of born_country
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
count(born_country) %>% #Table of different countries
arrange(desc(born_country)) #ARRANGEd by DESCending order of born_country
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
count(born_country) %>%
arrange(desc(born_country)) #ARRANGEd by DESCending order of born_country
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
arrange(desc(born_country)) %>% #ARRANGEd by DESCending order of born_country
count(born_country)  #Table of different countries
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
arrange(desc(n)) %>% #ARRANGEd by DESCending order of born_country
count(born_country)  #Table of different countries
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
arrange(desc()) %>% #ARRANGEd by DESCending order of born_country
count(born_country)  #Table of different countries
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
arrange(desc(born_country)) %>% #ARRANGEd by DESCending order of born_country
count(born_country)  #Table of different countries
nobel_living_science %>%  #What tibble we want
filter(country_us == "USA", born_country_us == "Other") %>% #Filtering for people who won in US but were born elsewhere
count(born_country) %>% #Table of different countries
arrange(desc(n)) #ARRANGEd by DESCending order of born_country
